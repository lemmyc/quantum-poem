:root {
  --neon-cyan: #00ffe7;
  --neon-blue: #00b7eb;
  --max-width: min(600px, 90vw);
  --padding: clamp(1rem, 3vw, 2rem);
}

* {
  box-sizing: border-box;
}

@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&family=Roboto+Mono:wght@400;500&display=swap');

.poem-page {
  min-height: 100vh;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  background-attachment: fixed;
  color: var(--neon-cyan);
  padding: var(--padding);
  position: relative;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  font-family: 'Roboto Mono', monospace;

  &::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(rgba(0, 0, 0, 0.85), rgba(0, 0, 0, 0.95));
    pointer-events: none;
    z-index: 0;
  }

  .glitch-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      to bottom,
      rgba(0, 255, 231, 0.2) 0%,
      transparent 50%,
      rgba(0, 255, 231, 0.2) 100%
    );
    opacity: 0.5;
    animation: glitch 1.8s infinite;
    z-index: 1;
  }

  .scanline-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      to bottom,
      transparent 50%,
      rgba(0, 255, 231, 0.1) 50%
    );
    background-size: 100% 4px;
    opacity: 0.4;
    animation: scanline 4s linear infinite;
    z-index: 2;
  }

  .neon-grid {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(0deg, rgba(0, 255, 231, 0.15) 1px, transparent 1px),
                linear-gradient(90deg, rgba(0, 255, 231, 0.15) 1px, transparent 1px);
    background-size: clamp(20px, 4vw, 40px) clamp(20px, 4vw, 40px);
    opacity: 0.5;
    animation: gridPulse 3.5s infinite;
    z-index: 3;
  }

  .cityscape-layer {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    height: clamp(150px, 20vh, 300px);
    background: linear-gradient(
      to top,
      rgba(0, 255, 231, 0.4),
      rgba(0, 183, 235, 0.3),
      transparent
    );
    opacity: 0.7;
    animation: cityscapeMove 12s linear infinite;
    z-index: 4;
    box-shadow: 0 0 clamp(20px, 5vw, 50px) rgba(0, 255, 231, 0.5);
  }

  .starry-sky {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(
      circle at center,
      rgba(0, 255, 231, 0.1) 0%,
      transparent 70%
    );
    opacity: 0.4;
    z-index: 5;
    animation: twinkle 6s infinite;
  }

  .data-stream {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      to bottom,
      rgba(0, 255, 231, 0.05) 1px,
      transparent 1px
    );
    background-size: 100% clamp(10px, 2vw, 20px);
    opacity: 0.3;
    animation: dataStream 10s linear infinite;
    z-index: 6;
  }

  .circuit-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      45deg,
      rgba(0, 255, 231, 0.05) 1px,
      transparent 1px
    );
    background-size: clamp(25px, 5vw, 50px) clamp(25px, 5vw, 50px);
    opacity: 0.3;
    animation: circuitPulse 8s infinite;
    z-index: 7;
  }

  .pulse-wave {
    position: absolute;
    top: 50%;
    left: 50%;
    width: clamp(300px, 60vw, 600px);
    height: clamp(300px, 60vw, 600px);
    background: radial-gradient(circle, rgba(0, 255, 231, 0.2), transparent);
    opacity: 0.3;
    transform: translate(-50%, -50%) scale(1);
    animation: pulseWave 5s infinite ease-in-out;
    z-index: 8;
  }

  .back-button-container {
    position: fixed;
    top: 1.5rem;
    left: 1.5rem;
    z-index: 60;
  }

  .neon-back-button {
    font-family: 'Orbitron', sans-serif;
    font-size: clamp(0.9rem, 2.5vw, 1.2rem);
    padding: clamp(0.5rem, 1.5vw, 0.8rem) clamp(1rem, 2vw, 1.8rem);
    background: rgba(0, 0, 0, 0.8);
    border: 3px solid var(--neon-cyan);
    border-radius: 25px;
    color: var(--neon-cyan);
    text-shadow: 0 0 clamp(10px, 2vw, 15px) var(--neon-cyan);
    box-shadow: 0 0 clamp(20px, 4vw, 30px) rgba(0, 255, 231, 0.7), inset 0 0 clamp(10px, 2vw, 15px) rgba(0, 255, 231, 0.3);
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    animation: holoPulse 3s infinite;

    &:hover {
      transform: scale(1.2);
      box-shadow: 0 0 clamp(30px, 6vw, 50px) rgba(0, 255, 231, 0.9), inset 0 0 clamp(15px, 3vw, 20px) rgba(0, 255, 231, 0.4);
      background: linear-gradient(45deg, var(--neon-blue), var(--neon-cyan));

      &::after {
        content: '';
        position: absolute;
        top: clamp(-15px, -3vw, -20px);
        left: clamp(-15px, -3vw, -20px);
        right: clamp(-15px, -3vw, -20px);
        bottom: clamp(-15px, -3vw, -20px);
        background: radial-gradient(circle, rgba(0, 255, 231, 0.6), transparent);
        opacity: 0;
        animation: sparkle 0.4s ease-out;
      }

      &::before {
        content: '';
        position: absolute;
        top: clamp(-20px, -4vw, -30px);
        left: clamp(-20px, -4vw, -30px);
        right: clamp(-20px, -4vw, -30px);
        bottom: clamp(-20px, -4vw, -30px);
        background: radial-gradient(circle, rgba(0, 255, 231, 0.3), transparent);
        opacity: 0;
        animation: microSwarm 0.6s ease-out;
      }
    }

    &::before {
      content: '';
      position: absolute;
      top: -4px;
      left: -4px;
      right: -4px;
      bottom: -4px;
      border: 2px solid rgba(0, 255, 231, 0.4);
      border-radius: 30px;
      animation: borderFlicker 3.5s infinite;
      z-index: -1;
    }
  }

  .poem-container {
    max-width: var(--max-width);
    width: 100%;
    position: relative;
    z-index: 10;
    background: rgba(0, 0, 0, 0.85);
    border-radius: clamp(15px, 3vw, 25px);
    backdrop-filter: blur(clamp(10px, 2vw, 15px));
    border: 4px solid var(--neon-cyan);
    box-shadow: 0 0 clamp(40px, 8vw, 70px) rgba(0, 255, 231, 0.8), inset 0 0 clamp(15px, 3vw, 25px) rgba(0, 255, 231, 0.4);
    padding: var(--padding);
    transition: transform 0.5s ease, box-shadow 0.5s ease;
    animation: holoPulse 3s infinite;

    &:hover {
      transform: translateY(clamp(-10px, -2vw, -15px));
      box-shadow: 0 0 clamp(50px, 10vw, 80px) rgba(0, 255, 231, 0.9), inset 0 0 clamp(20px, 4vw, 35px) rgba(0, 255, 231, 0.5);
    }

    &::before {
      content: '';
      position: absolute;
      top: -8px;
      left: -8px;
      right: -8px;
      bottom: -8px;
      border: 2px solid rgba(0, 255, 231, 0.4);
      border-radius: clamp(20px, 4vw, 30px);
      animation: borderFlicker 3.5s infinite;
      z-index: -1;
    }

    &::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(
        to bottom,
        rgba(0, 255, 231, 0.1) 0%,
        transparent 50%
      );
      opacity: 0.3;
      animation: scanline 3s linear infinite;
      z-index: 1;
    }
  }

  .holo-field {
    position: absolute;
    top: clamp(-10px, -2vw, -20px);
    left: clamp(-10px, -2vw, -20px);
    right: clamp(-10px, -2vw, -20px);
    bottom: clamp(-10px, -2vw, -20px);
    z-index: 0;
  }

  .holo-particle {
    position: absolute;
    width: clamp(4px, 1vw, 6px);
    height: clamp(4px, 1vw, 6px);
    background: radial-gradient(circle, var(--neon-cyan) 10%, transparent 70%);
    opacity: 0.4;
    animation: holoFieldPulse 4s infinite;

    @for $i from 1 through 20 {
      &.holo-particle-#{$i} {
        left: #{percentage(0.5)}; 
        top: #{percentage(0.5)}; 
        animation-delay: #{random(4000)}ms;
        transform: scale(#{0.3 + random(5) * 0.1});
        animation-duration: #{3 + random(3)}s;

        @if $i % 4 == 0 {
          border-radius: 0;
          transform: rotate(45deg) scale(#{0.3 + random(5) * 0.1});
        } @else if $i % 4 == 1 {
          border-radius: 50%;
        } @else if $i % 4 == 2 {
          clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
        } @else {
          background: radial-gradient(circle, var(--neon-blue) 10%, transparent 70%);
        }
      }
    }
  }

  .poem-header {
    text-align: center;
    margin-bottom: clamp(1rem, 2vw, 2rem);

    .poem-title {
      font-family: 'Orbitron', sans-serif;
      font-size: clamp(1.6rem, 4vw, 2.5rem);
      text-transform: uppercase;
      text-shadow: 0 0 clamp(20px, 4vw, 30px) var(--neon-cyan), 0 0 clamp(40px, 8vw, 60px) var(--neon-blue), 0 0 clamp(60px, 12vw, 90px) var(--neon-cyan);
      animation: neonHoloFlicker 2s infinite;
      position: relative;

      &::after {
        content: attr(data-text);
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        text-shadow: 0 0 clamp(15px, 3vw, 20px) var(--neon-cyan);
        animation: glitchText 2s infinite;
      }
    }

    .poem-meta {
      display: flex;
      justify-content: center;
      align-items: center;
      gap: clamp(1rem, 2vw, 1.5rem);
      flex-wrap: wrap;

      .emotion-indicator {
        font-family: 'Orbitron', sans-serif;
        font-size: clamp(0.9rem, 2vw, 1.2rem);
        padding: clamp(0.5rem, 1vw, 0.7rem) clamp(1rem, 2vw, 1.4rem);
        background: rgba(0, 255, 231, 0.3);
        border-radius: 50px;
        border: 2px solid var(--neon-cyan);
        box-shadow: 0 0 clamp(15px, 3vw, 25px) rgba(0, 255, 231, 0.6);
        text-transform: capitalize;
        animation: neonFlicker 1.8s infinite;
      }
    }
  }

  .poem-content {
    margin-bottom: clamp(1rem, 2vw, 2rem);
    position: relative;
    z-index: 2;

    .poem-line {
      font-size: clamp(0.9rem, 2.5vw, 1.3rem);
      line-height: 2;
      margin-bottom: clamp(0.5rem, 1vw, 1rem);
      text-align: center;
      opacity: 0;
      transform: translateY(clamp(30px, 5vw, 50px));
      animation: typeIn 1.5s ease-out forwards, microGlitch 3.5s infinite, rippleGlow 4s infinite;
      background: linear-gradient(45deg, var(--neon-cyan), var(--neon-blue), var(--neon-cyan));
      background-size: 400% 400%;
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      text-shadow: 0 0 clamp(10px, 2vw, 15px) rgba(0, 255, 231, 0.8);

      @for $i from 1 through 10 {
        &:nth-child(#{$i}) {
          animation-delay: #{0.3 * $i}s, #{random(4)}s, #{random(4)}s;
        }
      }
    }
  }

  .poem-keywords {
    text-align: center;
    margin-top: clamp(1rem, 2vw, 2rem);
    position: relative;
    z-index: 2;

    h3 {
      font-family: 'Orbitron', sans-serif;
      font-size: clamp(1.2rem, 3vw, 1.6rem);
      color: var(--neon-cyan);
      text-shadow: 0 0 clamp(15px, 3vw, 25px) var(--neon-cyan), 0 0 clamp(30px, 6vw, 50px) var(--neon-blue);
      margin-bottom: clamp(0.8rem, 1.5vw, 1.2rem);
      animation: neonHoloFlicker 2.5s infinite;
    }

    .keywords-list {
      display: flex;
      flex-wrap: wrap;
      gap: clamp(0.5rem, 1vw, 1rem);
      justify-content: center;

      .keyword-tag {
        font-family: 'Orbitron', sans-serif;
        padding: clamp(0.3rem, 0.8vw, 0.5rem) clamp(0.6rem, 1.5vw, 1rem);
        background: linear-gradient(45deg, var(--neon-cyan), var(--neon-blue));
        border-radius: 25px;
        font-size: clamp(0.7rem, 1.5vw, 0.9rem);
        font-weight: 700;
        color: #000;
        box-shadow: 0 0 clamp(20px, 4vw, 30px) rgba(0, 255, 231, 0.7);
        transition: all 0.3s ease;
        animation: glitchTypeIn 0.6s ease-out forwards, glitchText 2.5s infinite, sparkleRandom 3s infinite;
        position: relative;

        &:hover {
          transform: translateY(clamp(-4px, -1vw, -6px)) scale(1.1);
          box-shadow: 0 0 clamp(30px, 6vw, 50px) rgba(0, 255, 231, 0.9);
          background: linear-gradient(45deg, var(--neon-blue), var(--neon-cyan));

          &::after {
            content: '';
            position: absolute;
            top: clamp(-15px, -3vw, -20px);
            left: clamp(-15px, -3vw, -20px);
            right: clamp(-15px, -3vw, -20px);
            bottom: clamp(-15px, -3vw, -20px);
            background: radial-gradient(circle, rgba(0, 255, 231, 0.6), transparent);
            opacity: 0;
            animation: sparkle 0.4s ease-out;
          }

          &::before {
            content: '';
            position: absolute;
            top: clamp(-8px, -2vw, -10px);
            left: clamp(-8px, -2vw, -10px);
            right: clamp(-8px, -2vw, -10px);
            bottom: clamp(-8px, -2vw, -10px);
            background: radial-gradient(circle, rgba(0, 255, 231, 0.3), transparent);
            opacity: 0;
            animation: microSwarm 0.6s ease-out;
          }
        }
      }
    }
  }

  .aurora-gradient {
    position: absolute;
    top: clamp(-100px, -15vw, -150px);
    left: 50%;
    transform: translateX(-50%);
    width: 110vw;
    height: clamp(150px, 25vw, 250px);
    background: linear-gradient(
      120deg,
      rgba(0, 255, 231, 0.8),
      rgba(0, 183, 235, 0.7),
      transparent
    );
    opacity: 0.8;
    filter: blur(clamp(40px, 8vw, 60px));
    border-radius: clamp(50px, 10vw, 100px);
    animation: auroraMove 5s linear infinite alternate;
    z-index: 9;

    &.aurora-secondary {
      top: clamp(-50px, -10vw, -80px);
      width: 90vw;
      height: clamp(100px, 20vw, 180px);
      opacity: 0.7;
      filter: blur(clamp(30px, 6vw, 50px));
      background: linear-gradient(
        120deg,
        transparent,
        rgba(0, 255, 231, 0.6),
        rgba(0, 183, 235, 0.7)
      );
      animation: auroraMoveSecondary 7s linear infinite alternate;
    }
  }

  .particle {
    position: fixed;
    top: 0;
    left: 0;
    width: clamp(4px, 1vw, 8px);
    height: clamp(4px, 1vw, 8px);
    background: radial-gradient(circle, var(--neon-cyan) 10%, transparent 70%);
    opacity: 0.5;
    pointer-events: none;
    z-index: 10;
    animation: particleMove 6s linear infinite;
    box-shadow: 0 0 clamp(10px, 2vw, 15px) var(--neon-cyan);
    transition: transform 0.1s ease;

    &::after {
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      background: radial-gradient(circle, var(--neon-cyan) 10%, transparent 70%);
      opacity: 0.3;
      transform: scale(2);
      animation: trailFade 0.5s linear infinite;
    }

    @for $i from 1 through 70 {
      &.particle-#{$i} {
        left: random(100) * 1vw;
        top: random(80) * 1vh;
        animation-delay: random(6000) * 1ms;
        animation-duration: #{4 + random(5)}s;
        transform: scale(#{0.2 + random(6) * 0.1});
        width: clamp(3px, 0.8vw, #{4 + random(6)}px);
        height: clamp(3px, 0.8vw, #{4 + random(6)}px);

        @if $i % 8 == 0 {
          border-radius: 0;
          transform: rotate(45deg) scale(#{0.2 + random(6) * 0.1});
          background: radial-gradient(circle, var(--neon-blue) 10%, transparent 70%);
          animation: particleMove 6s linear infinite, flicker 2s infinite;
        } @else if $i % 8 == 1 {
          border-radius: 50%;
          box-shadow: 0 0 clamp(15px, 3vw, 20px) var(--neon-cyan), 0 0 clamp(30px, 6vw, 40px) rgba(0, 255, 231, 0.4);
        } @else if $i % 8 == 2 {
          clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
          animation: particleRotate 6s linear infinite;
        } @else if $i % 8 == 3 {
          width: clamp(10px, 2vw, 20px);
          height: clamp(2px, 0.5vw, 3px);
          background: var(--neon-cyan);
          box-shadow: 0 0 clamp(20px, 4vw, 30px) var(--neon-cyan);
          animation: streakMove 3.5s linear infinite;
        } @else if $i % 8 == 4 {
          background: none;
          font-size: clamp(8px, 1.5vw, 10px);
          color: var(--neon-cyan);
          text-shadow: 0 0 clamp(8px, 1.5vw, 10px) var(--neon-cyan);
          animation: glyphFall 5s linear infinite;
        } @else if $i % 8 == 5 {
          background: none;
          font-size: clamp(8px, 1.5vw, 10px);
          color: var(--neon-cyan);
          text-shadow: 0 0 clamp(8px, 1.5vw, 10px) var(--neon-cyan);
          animation: glyphFall 5s linear infinite;
        } @else if $i % 8 == 6 {
          background: none;
          font-size: clamp(8px, 1.5vw, 10px);
          color: var(--neon-cyan);
          text-shadow: 0 0 clamp(8px, 1.5vw, 10px) var(--neon-cyan);
          animation: glyphFall 5s linear infinite;
        } @else {
          clip-path: polygon(50% 0%, 20% 90%, 80% 90%);
          background: radial-gradient(circle, var(--neon-cyan) 10%, transparent 70%);
          animation: particleRotate 5s linear infinite, flicker 3s infinite;
        }
      }
    }
  }

  @keyframes auroraMove {
    0% {
      left: 30%;
      filter: blur(clamp(40px, 8vw, 60px)) brightness(1);
    }
    100% {
      left: 70%;
      filter: blur(clamp(50px, 10vw, 70px)) brightness(1.7);
    }
  }

  @keyframes auroraMoveSecondary {
    0% {
      left: 70%;
      filter: blur(clamp(30px, 6vw, 50px)) brightness(1);
    }
    100% {
      left: 30%;
      filter: blur(clamp(40px, 8vw, 60px)) brightness(1.6);
    }
  }

  @keyframes glitch {
    0%, 100% {
      opacity: 0.5;
      transform: translate(0, 0);
    }
    10% {
      opacity: 0.4;
      transform: translate(clamp(3px, 0.5vw, 5px), clamp(-3px, -0.5vw, -5px));
    }
    20% {
      opacity: 0.6;
      transform: translate(clamp(-3px, -0.5vw, -5px), clamp(3px, 0.5vw, 5px));
    }
    30% {
      opacity: 0.5;
      transform: translate(0, 0);
    }
  }

  @keyframes scanline {
    0% {
      background-position: 0 0;
    }
    100% {
      background-position: 0 100%;
    }
  }

  @keyframes gridPulse {
    0%, 100% {
      opacity: 0.5;
    }
    50% {
      opacity: 0.7;
    }
  }

  @keyframes cityscapeMove {
    0% {
      background-position: 0 0;
    }
    100% {
      background-position: clamp(100px, 20vw, 200px) 0;
    }
  }

  @keyframes twinkle {
    0%, 100% {
      opacity: 0.4;
    }
    50% {
      opacity: 0.6;
    }
  }

  @keyframes dataStream {
    0% {
      background-position: 0 0;
    }
    100% {
      background-position: 0 100%;
    }
  }

  @keyframes circuitPulse {
    0%, 100% {
      opacity: 0.3;
    }
    50% {
      opacity: 0.5;
    }
  }

  @keyframes pulseWave {
    0%, 100% {
      transform: translate(-50%, -50%) scale(1);
      opacity: 0.3;
    }
    50% {
      transform: translate(-50%, -50%) scale(1.2);
      opacity: 0.5;
    }
  }

  @keyframes neonHoloFlicker {
    0%, 100% {
      text-shadow: 0 0 clamp(20px, 4vw, 30px) var(--neon-cyan), 0 0 clamp(40px, 8vw, 60px) var(--neon-blue), 0 0 clamp(60px, 12vw, 90px) var(--neon-cyan);
      opacity: 1;
    }
    2% {
      text-shadow: 0 0 clamp(10px, 2vw, 15px) var(--neon-cyan);
      opacity: 0.5;
    }
    4% {
      text-shadow: 0 0 clamp(25px, 5vw, 40px) var(--neon-cyan), 0 0 clamp(50px, 10vw, 70px) var(--neon-blue);
      opacity: 1;
    }
  }

  @keyframes microGlitch {
    0%, 100% {
      transform: translate(0, 0);
    }
    10% {
      transform: translate(clamp(1px, 0.3vw, 2px), clamp(-1px, -0.3vw, -2px));
    }
    20% {
      transform: translate(clamp(-1px, -0.3vw, -2px), clamp(1px, 0.3vw, 2px));
    }
  }

  @keyframes glitchText {
    0%, 100% {
      transform: translate(0, 0);
      opacity: 0.7;
    }
    10% {
      transform: translate(clamp(2px, 0.5vw, 4px), clamp(-2px, -0.5vw, -4px));
      opacity: 0.5;
    }
    20% {
      transform: translate(clamp(-2px, -0.5vw, -4px), clamp(2px, 0.5vw, 4px));
      opacity: 0.6;
    }
  }

  @keyframes typeIn {
    0% {
      width: 0;
      opacity: 0;
      transform: translateX(clamp(-15px, -3vw, -20px));
    }
    80% {
      opacity: 0.9;
    }
    100% {
      width: auto;
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes glitchTypeIn {
    0% {
      width: 0;
      opacity: 0;
      transform: translateX(clamp(-10px, -2vw, -15px));
    }
    80% {
      opacity: 0.8;
    }
    100% {
      width: auto;
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes holoPulse {
    0%, 100% {
      box-shadow: 0 0 clamp(40px, 8vw, 70px) rgba(0, 255, 231, 0.8), inset 0 0 clamp(15px, 3vw, 25px) rgba(0, 255, 231, 0.4);
    }
    50% {
      box-shadow: 0 0 clamp(50px, 10vw, 80px) rgba(0, 255, 231, 0.9), inset 0 0 clamp(20px, 4vw, 35px) rgba(0, 255, 231, 0.5);
    }
  }

  @keyframes borderFlicker {
    0%, 100% {
      opacity: 0.4;
    }
    50% {
      opacity: 0.7;
    }
  }

  @keyframes sparkle {
    0% {
      opacity: 0.6;
      transform: scale(1);
    }
    100% {
      opacity: 0;
      transform: scale(2.5);
    }
  }

  @keyframes microSwarm {
    0% {
      opacity: 0.3;
      transform: scale(1);
    }
    100% {
      opacity: 0;
      transform: scale(3);
    }
  }

  @keyframes sparkleRandom {
    0%, 100% {
      text-shadow: 0 0 clamp(20px, 4vw, 30px) rgba(0, 255, 231, 0.7);
    }
    50% {
      text-shadow: 0 0 clamp(30px, 6vw, 40px) rgba(0, 255, 231, 0.9), 0 0 clamp(40px, 8vw, 60px) rgba(0, 183, 235, 0.7);
    }
  }

  @keyframes rippleGlow {
    0%, 100% {
      text-shadow: 0 0 clamp(10px, 2vw, 15px) rgba(0, 255, 231, 0.8);
      transform: scale(1);
    }
    50% {
      text-shadow: 0 0 clamp(15px, 3vw, 25px) rgba(0, 255, 231, 0.9), 0 0 clamp(25px, 5vw, 40px) rgba(0, 183, 235, 0.7);
      transform: scale(1.02);
    }
  }

  @keyframes holoFieldPulse {
    0%, 100% {
      opacity: 0.4;
      transform: translate(0, 0) scale(1);
    }
    50% {
      opacity: 0.7;
      transform: translate(#{random(10) - 5}px, #{random(10) - 5}px) scale(1.2);
    }
  }

  @keyframes particleMove {
    0% {
      transform: translateY(0) scale(1);
      opacity: 0.5;
    }
    50% {
      opacity: 0.8;
    }
    100% {
      transform: translateY(100vh) scale(0.1);
      opacity: 0;
    }
  }

  @keyframes particleRotate {
    0% {
      transform: translateY(0) rotate(0deg);
      opacity: 0.5;
    }
    50% {
      opacity: 0.8;
    }
    100% {
      transform: translateY(100vh) rotate(720deg);
      opacity: 0;
    }
  }

  @keyframes streakMove {
    0% {
      transform: translateY(0) rotate(45deg);
      opacity: 0.7;
    }
    50% {
      opacity: 0.9;
    }
    100% {
      transform: translateY(100vh) rotate(45deg);
      opacity: 0;
    }
  }

  @keyframes glyphFall {
    0% {
      transform: translateY(0);
      opacity: 0.5;
    }
    50% {
      opacity: 0.8;
    }
    100% {
      transform: translateY(100vh);
      opacity: 0;
    }
  }

  @keyframes trailFade {
    0% {
      opacity: 0.3;
      transform: scale(2);
    }
    100% {
      opacity: 0;
      transform: scale(3);
    }
  }

  @keyframes flicker {
    0%, 100% {
      opacity: 0.5;
    }
    50% {
      opacity: 0.8;
    }
  }

@media (max-width: 768px) {
  .poem-page {
    padding: clamp(1rem, 2vw, 1.5rem);
  }

  .poem-container {
    padding: clamp(1rem, 2vw, 1.5rem);
    max-width: 90vw;
  }

  .poem-header {
    .poem-title {
      font-size: clamp(1.4rem, 3.5vw, 2rem);
    }

    .poem-meta {
      gap: clamp(0.8rem, 1.5vw, 1rem);
    }
  }

  .poem-content {
    .poem-line {
      font-size: clamp(0.8rem, 2vw, 1.1rem);
    }
  }

  .poem-keywords {
    .keywords-list {
      gap: clamp(0.4rem, 0.8vw, 0.8rem);

      .keyword-tag {
        font-size: clamp(0.6rem, 1.2vw, 0.8rem);
        padding: clamp(0.2rem, 0.6vw, 0.4rem) clamp(0.5rem, 1vw, 0.8rem);
      }
    }
  }

  .pulse-wave {
    width: clamp(200px, 50vw, 400px);
    height: clamp(200px, 50vw, 400px);
  }

  .neon-back-button {
    font-size: clamp(0.8rem, 2vw, 1rem);
    padding: clamp(0.4rem, 1vw, 0.6rem) clamp(0.8rem, 1.5vw, 1.4rem);
  }

  .particle {
    @for $i from 1 through 70 {
      &.particle-#{$i} {
        width: clamp(2px, 0.6vw, #{3 + random(4)}px);
        height: clamp(2px, 0.6vw, #{3 + random(4)}px);
      }
    }
  }

  .holo-particle {
    width: clamp(3px, 0.8vw, 5px);
    height: clamp(3px, 0.8vw, 5px);
  }
}

@media (max-width: 480px) {
  .poem-page {
    padding: clamp(0.5rem, 1.5vw, 1rem);
  }

  .poem-header {
    .poem-title {
      font-size: clamp(1.2rem, 3vw, 1.6rem);
    }
  }

  .poem-content {
    .poem-line {
      font-size: clamp(0.7rem, 1.8vw, 1rem);
    }
  }

  .pulse-wave {
    width: clamp(150px, 40vw, 300px);
    height: clamp(150px, 40vw, 300px);
  }

  .neon-back-button {
    font-size: clamp(0.7rem, 1.8vw, 0.9rem);
    padding: clamp(0.3rem, 0.8vw, 0.5rem) clamp(0.6rem, 1.2vw, 1.2rem);
  }

  .particle {
    @for $i from 1 through 70 {
      &.particle-#{$i} {
        width: clamp(2px, 0.5vw, #{2 + random(3)}px);
        height: clamp(2px, 0.5vw, #{2 + random(3)}px);
        animation-duration: #{5 + random(3)}s;
      }
    }
  }

  .holo-particle {
    width: clamp(2px, 0.5vw, 4px);
    height: clamp(2px, 0.5vw, 4px);
  }
}
}